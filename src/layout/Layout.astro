---
import { ViewTransitions } from 'astro:transitions';
import Header from '../components/Header.astro';
import '@fontsource-variable/inter'
interface Props{
    title: string;
    desc: string;
}

const { desc, title } = Astro.props; 

const GA_MEASUREMENT_ID = "G-VQFM80T5BV";

const darkMode = true;
const primary = 'bg-white';
const secondary = 'bg-gray-900'; 

const getColor = () => {
  if (darkMode) {
    return secondary;
  } else {
    return primary;
  }
};

---

<!doctype html>

<html lang="es" class="dark">
	<head>
    <!-- Google tag (gtag.js) -->
    <script type="text/partytown" async src=`https://www.googletagmanager.com/gtag/js?id=${GA_MEASUREMENT_ID}`></script>
    <script type="text/partytown">
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());

        gtag('config', 'MEASUREMENT_ID');
    </script>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="description" content={desc}/>
		<meta name="viewport" content="width=device-width"/>
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
        <ViewTransitions />        
	</head>
	<body class="relative">
            <!-- <div
            class="absolute inset-0 z-[-2] min-h-screen w-full bg-gray-900
            bg-[radial-gradient(ellipse_at_center,_#640d14,_rgba(255,255,255,0))]"
        > -->
            <div class={`absolute inset-0 z-[-2] min-h-screen w-full bg-white dark:bg-gray-900`}></div>
        </div>
        <Header/>
        <slot/>
        </div>
    </body>
</html>

<style is:global>

    html{
        font-family: 'inter variable',system-ui, sans-serif;
        scroll-behavior: smooth;
    }

    body {
        display: flex;
        flex-direction: column;
        min-height: 100dvh;
        overscroll-behavior: none;        
      }

      @media (prefers-reduced-motion: reduce) {
        html {
          scroll-behavior: auto;
        }
      }

      #header-nav {
        animation: blur linear both 0.5s;
        animation-timeline: scroll();
        animation-range: 0 500px;
      }

      @keyframes blur {
        to {
          backdrop-filter: blur(20px);
          border-width: 1px;
          border-color: rgba(0, 0, 0);
          padding: 0.25rem 0.75rem;
          display: flex;
          flex-direction: row;
          align-items: center;
          background-color: rgb(229, 229, 229);
          border-radius: 9999px;
        }
      }

      @media () {
        @keyframes blur {
          from {
            border: 0px;
          }
          to {
            box-shadow:
              0px 5px 50px -5px rgba(0, 0, 0, 0.1),
              0px 0px 0 1px rgba(0, 0, 0, 0.3);
            background: rgba(0, 0, 0, 0.3);
            backdrop-filter: blur(20px);
            border-width: 1px;
            border-color: rgba(0, 0, 0);
            padding-left: 0.75rem;
            padding-right: 0.75rem;
            padding-top: 0.25rem;
            padding-bottom: 0.25rem;
            display: flex;
            flex-direction: row;
            align-items: center;
            background-color: rgba(0, 0, 0, 0.3);
            border-radius: 9999px;
          }
        }
      }
</style>